# Automated Quality Validator
# 自动化质量验证器 - 多层次质量保证系统

meta:
  name: "Automated Quality Validator"
  version: "2.0"
  description: "多层次、全方位自动化质量验证系统"
  created_date: "2025-09-10"
  validation_philosophy: "ZERO_TOLERANCE_FOR_QUALITY_DEFECTS"

# ========== 质量验证架构 ==========
quality_validation_architecture:
  validation_layers:
    count: 7
    execution_mode: "SEQUENTIAL_WITH_GATES"
    failure_handling: "IMMEDIATE_CORRECTION_AND_RETRY"
    success_criteria: "ALL_LAYERS_PASS"

  validation_philosophy:
    - "质量第一，速度第二"
    - "宁可多验证，不可有缺陷"
    - "自动化纠错，人工干预最小化"
    - "全流程质量追踪"

# ========== 第一层：语法和格式验证 ==========
layer_1_syntax_format_validation:
  name: "Syntax and Format Validation"
  priority: "CRITICAL"
  description: "验证文档的基本语法、格式和结构合规性"

  validators:
    - validator: "markdown_syntax_validator"
      description: "Markdown语法验证"
      checks:
        - markdown_syntax_correctness
        - header_hierarchy_validation
        - list_format_validation
        - table_format_validation
        - link_format_validation
        - code_block_format_validation
      error_handling: "AUTO_CORRECTION"
      pass_criteria: "SYNTAX_ERROR_COUNT_ZERO"

    - validator: "yaml_frontmatter_validator"
      description: "YAML前置元数据验证"
      checks:
        - yaml_syntax_validation
        - required_metadata_presence
        - metadata_format_validation
        - metadata_value_validation
      error_handling: "AUTO_CORRECTION"
      pass_criteria: "YAML_VALID_AND_COMPLETE"

    - validator: "template_structure_validator"
      description: "模板结构验证"
      checks:
        - required_sections_presence:
            - "状态"
            - "用户故事"
            - "验收标准"
            - "数据库设计相关"
            - "API接口规范"
            - "任务/子任务"
            - "开发者说明"
            - "变更日志"
            - "开发者代理记录"
            - "QA结果"
        - section_order_validation
        - subsection_completeness
        - header_level_consistency
      error_handling: "STRUCTURE_RECONSTRUCTION"
      pass_criteria: "STRUCTURE_100_COMPLIANT"

    - validator: "content_format_validator"
      description: "内容格式验证"
      checks:
        - user_story_format: "^\\*\\*作为\\*\\*.*\\*\\*我希望\\*\\*.*\\*\\*以便\\*\\*.*$"
        - status_value_validation:
            ["Draft", "Approved", "InProgress", "Review", "Done", "Completed"]
        - table_format_consistency
        - json_code_block_validation
        - bash_code_block_validation
      error_handling: "FORMAT_STANDARDIZATION"
      pass_criteria: "FORMAT_COMPLIANCE_100"

  layer_success_criteria:
    syntax_errors: 0
    format_violations: 0
    structure_defects: 0
    overall_score: 100

# ========== 第二层：内容完整性验证 ==========
layer_2_content_completeness_validation:
  name: "Content Completeness Validation"
  priority: "CRITICAL"
  description: "验证文档内容的完整性和必要信息的存在"

  validators:
    - validator: "user_story_completeness_validator"
      description: "用户故事完整性验证"
      checks:
        - user_story_presence_and_format
        - acceptance_criteria_completeness
        - acceptance_criteria_measurability
        - story_value_proposition_clarity
      scoring_method: "COMPLETENESS_PERCENTAGE"
      pass_criteria: "COMPLETENESS_SCORE_95_PLUS"

    - validator: "database_design_completeness_validator"
      description: "数据库设计完整性验证"
      checks:
        - entities_table_completeness:
            required_columns: ["实体名称", "表名", "主要用途", "关键字段"]
            minimum_entities: 1
        - data_operations_completeness:
            required_operations: ["查询操作", "插入操作", "更新操作", "删除操作"]
            operation_descriptions: "DETAILED_AND_SPECIFIC"
        - business_rules_presence:
            minimum_rules: 3
            rule_specificity: "ACTIONABLE_AND_TESTABLE"
      scoring_method: "WEIGHTED_COMPLETENESS"
      pass_criteria: "DB_DESIGN_SCORE_90_PLUS"

    - validator: "api_specification_completeness_validator"
      description: "API规范完整性验证"
      checks:
        - api_endpoints_table_completeness:
            required_columns: ["序号", "接口名称", "HTTP方法", "路径", "说明", "状态"]
            minimum_endpoints: 1
        - api_detailed_design_completeness:
            required_elements:
              [
                "接口描述",
                "HTTP方法",
                "请求路径",
                "请求参数",
                "响应数据结构",
                "请求示例",
                "响应示例",
                "错误码定义",
              ]
            example_quality: "REALISTIC_AND_COMPREHENSIVE"
        - data_mapping_completeness:
            mapping_tables_presence: true
            mapping_accuracy: "FIELD_LEVEL_MAPPING"
      scoring_method: "API_COMPLETENESS_MATRIX"
      pass_criteria: "API_SPEC_SCORE_90_PLUS"

    - validator: "implementation_guidance_completeness_validator"
      description: "实施指导完整性验证"
      checks:
        - task_breakdown_completeness:
            backend_tasks_presence: true
            frontend_tasks_presence: true
            testing_tasks_presence: true
            task_specificity: "ACTIONABLE_WITH_CLEAR_DELIVERABLES"
        - developer_notes_completeness:
            database_context: "COMPREHENSIVE"
            api_context: "COMPREHENSIVE"
            integration_context: "COMPREHENSIVE"
            testing_context: "COMPREHENSIVE"
        - qa_results_completeness:
            test_categories_coverage: ["数据库操作正确性", "API接口功能性", "性能测试结果"]
            results_specificity: "QUANTITATIVE_WITH_METRICS"
      scoring_method: "IMPLEMENTATION_READINESS_SCORE"
      pass_criteria: "IMPLEMENTATION_SCORE_85_PLUS"

  layer_success_criteria:
    user_story_completeness: 95
    database_design_completeness: 90
    api_specification_completeness: 90
    implementation_guidance_completeness: 85
    overall_completeness_score: 90

# ========== 第三层：内容质量验证 ==========
layer_3_content_quality_validation:
  name: "Content Quality Validation"
  priority: "HIGH"
  description: "验证内容的准确性、清晰度和专业性"

  validators:
    - validator: "technical_accuracy_validator"
      description: "技术准确性验证"
      checks:
        - database_design_accuracy:
            entity_relationship_logic: "TECHNICALLY_SOUND"
            sql_naming_conventions: "STANDARD_COMPLIANT"
            data_type_appropriateness: "OPTIMAL_CHOICES"
        - api_design_accuracy:
            rest_principles_compliance: "RESTFUL_DESIGN"
            http_method_appropriateness: "SEMANTICALLY_CORRECT"
            status_code_accuracy: "HTTP_STANDARD_COMPLIANT"
            json_schema_validity: "VALID_JSON_STRUCTURE"
        - implementation_accuracy:
            technology_stack_consistency: "COHERENT_CHOICES"
            architectural_pattern_adherence: "BEST_PRACTICES"
            security_consideration_adequacy: "COMPREHENSIVE_COVERAGE"
      scoring_method: "EXPERT_SYSTEM_EVALUATION"
      pass_criteria: "TECHNICAL_ACCURACY_SCORE_90_PLUS"

    - validator: "clarity_and_readability_validator"
      description: "清晰度和可读性验证"
      checks:
        - language_clarity:
            sentence_structure: "CLEAR_AND_CONCISE"
            terminology_consistency: "STANDARDIZED_USAGE"
            technical_explanation_quality: "ACCESSIBLE_TO_TARGET_AUDIENCE"
        - documentation_clarity:
            instruction_actionability: "STEP_BY_STEP_CLEAR"
            example_quality: "REALISTIC_AND_HELPFUL"
            context_sufficiency: "COMPREHENSIVE_BACKGROUND"
        - visual_organization:
            table_readability: "WELL_FORMATTED"
            section_flow_logic: "LOGICAL_PROGRESSION"
            information_hierarchy: "CLEAR_STRUCTURE"
      scoring_method: "READABILITY_METRICS_ANALYSIS"
      pass_criteria: "CLARITY_SCORE_85_PLUS"

    - validator: "professional_quality_validator"
      description: "专业质量验证"
      checks:
        - documentation_professionalism:
            consistency_in_style: "UNIFORM_PRESENTATION"
            completeness_of_information: "THOROUGH_COVERAGE"
            attention_to_detail: "HIGH_PRECISION"
        - business_alignment:
            requirement_traceability: "CLEAR_LINKAGE"
            value_proposition_articulation: "COMPELLING_AND_CLEAR"
            stakeholder_consideration: "COMPREHENSIVE_PERSPECTIVE"
        - implementation_readiness:
            actionability_of_tasks: "IMMEDIATELY_EXECUTABLE"
            resource_requirement_clarity: "WELL_DEFINED"
            risk_and_dependency_identification: "PROACTIVE_CONSIDERATION"
      scoring_method: "PROFESSIONAL_STANDARDS_ASSESSMENT"
      pass_criteria: "PROFESSIONAL_QUALITY_SCORE_85_PLUS"

  layer_success_criteria:
    technical_accuracy: 90
    clarity_and_readability: 85
    professional_quality: 85
    overall_quality_score: 87

# ========== 第四层：一致性验证 ==========
layer_4_consistency_validation:
  name: "Consistency Validation"
  priority: "HIGH"
  description: "验证跨文档和内部一致性"

  validators:
    - validator: "terminology_consistency_validator"
      description: "术语一致性验证"
      checks:
        - entity_naming_consistency:
            database_entity_names: "EXACT_MATCH_ACROSS_DOCUMENTS"
            api_resource_names: "CONSISTENT_NAMING_CONVENTION"
            variable_naming: "STANDARDIZED_PATTERNS"
        - technical_term_consistency:
            framework_names: "CONSISTENT_USAGE"
            technology_references: "STANDARDIZED_TERMINOLOGY"
            status_values: "UNIFORM_ACROSS_ALL_DOCUMENTS"
        - business_term_consistency:
            domain_terminology: "CONSISTENT_DEFINITIONS"
            role_names: "STANDARDIZED_ACROSS_STORIES"
            process_terminology: "UNIFIED_LANGUAGE"
      scoring_method: "TERMINOLOGY_DICTIONARY_MATCHING"
      pass_criteria: "TERMINOLOGY_CONSISTENCY_95_PLUS"

    - validator: "structural_consistency_validator"
      description: "结构一致性验证"
      checks:
        - template_structure_uniformity:
            section_presence: "IDENTICAL_ACROSS_ALL_DOCUMENTS"
            section_ordering: "CONSISTENT_SEQUENCE"
            subsection_structure: "UNIFORM_HIERARCHY"
        - format_consistency:
            table_formats: "IDENTICAL_STRUCTURE"
            code_block_formatting: "CONSISTENT_STYLE"
            list_formatting: "UNIFORM_PATTERNS"
        - content_organization_consistency:
            information_flow: "LOGICAL_AND_CONSISTENT"
            detail_level_consistency: "APPROPRIATE_DEPTH_UNIFORMLY"
            example_format_consistency: "STANDARDIZED_PRESENTATION"
      scoring_method: "STRUCTURAL_PATTERN_ANALYSIS"
      pass_criteria: "STRUCTURAL_CONSISTENCY_95_PLUS"

    - validator: "cross_reference_consistency_validator"
      description: "交叉引用一致性验证"
      checks:
        - internal_reference_integrity:
            section_references: "ALL_REFERENCES_VALID"
            table_references: "ACCURATE_CROSS_LINKS"
            figure_references: "PROPER_LINKAGE"
        - cross_document_reference_integrity:
            story_to_story_references: "VALID_CROSS_REFERENCES"
            epic_level_references: "CONSISTENT_EPIC_LINKAGE"
            version_references: "ACCURATE_VERSION_TRACKING"
        - external_reference_consistency:
            template_references: "ACCURATE_TEMPLATE_LINKS"
            file_path_references: "VALID_FILE_PATHS"
            url_references: "ACCESSIBLE_AND_RELEVANT"
      scoring_method: "REFERENCE_GRAPH_VALIDATION"
      pass_criteria: "REFERENCE_INTEGRITY_98_PLUS"

  layer_success_criteria:
    terminology_consistency: 95
    structural_consistency: 95
    cross_reference_consistency: 98
    overall_consistency_score: 96

# ========== 第五层：实施可行性验证 ==========
layer_5_implementation_feasibility_validation:
  name: "Implementation Feasibility Validation"
  priority: "MEDIUM"
  description: "验证设计的实施可行性和技术合理性"

  validators:
    - validator: "database_design_feasibility_validator"
      description: "数据库设计可行性验证"
      checks:
        - schema_design_validity:
            table_structure_soundness: "NORMALIZATION_APPROPRIATE"
            relationship_design_correctness: "FOREIGN_KEY_LOGIC_VALID"
            index_strategy_reasonableness: "PERFORMANCE_OPTIMIZED"
        - data_operation_feasibility:
            query_complexity_assessment: "REASONABLE_PERFORMANCE"
            transaction_design_soundness: "ACID_COMPLIANT"
            scalability_considerations: "GROWTH_ACCOMMODATING"
        - technology_stack_compatibility:
            database_technology_alignment: "CONSISTENT_WITH_ARCHITECTURE"
            orm_framework_compatibility: "MYBATIS_PLUS_COMPATIBLE"
            performance_characteristics: "ACCEPTABLE_PERFORMANCE_PROFILE"
      scoring_method: "DATABASE_EXPERT_SYSTEM_ANALYSIS"
      pass_criteria: "DATABASE_FEASIBILITY_85_PLUS"

    - validator: "api_design_feasibility_validator"
      description: "API设计可行性验证"
      checks:
        - rest_api_design_soundness:
            resource_modeling_appropriateness: "RESTFUL_RESOURCE_DESIGN"
            http_method_semantic_correctness: "HTTP_SEMANTICS_COMPLIANT"
            status_code_usage_accuracy: "PROPER_STATUS_CODE_SELECTION"
        - implementation_complexity_assessment:
            endpoint_implementation_complexity: "REASONABLE_DEVELOPMENT_EFFORT"
            data_transformation_complexity: "MANAGEABLE_MAPPING_LOGIC"
            error_handling_comprehensiveness: "ROBUST_ERROR_MANAGEMENT"
        - integration_feasibility:
            frontend_integration_simplicity: "FRONTEND_FRIENDLY_DESIGN"
            backend_service_integration: "LOOSE_COUPLING_MAINTAINED"
            third_party_service_compatibility: "EXTERNAL_INTEGRATION_READY"
      scoring_method: "API_DESIGN_EXPERT_EVALUATION"
      pass_criteria: "API_FEASIBILITY_85_PLUS"

    - validator: "implementation_task_feasibility_validator"
      description: "实施任务可行性验证"
      checks:
        - task_decomposition_adequacy:
            granularity_appropriateness: "ACTIONABLE_TASK_SIZE"
            dependency_identification_completeness: "ALL_DEPENDENCIES_IDENTIFIED"
            skill_requirement_clarity: "CLEAR_EXPERTISE_REQUIREMENTS"
        - effort_estimation_reasonableness:
            development_effort_estimates: "REALISTIC_TIME_ESTIMATES"
            testing_effort_allocation: "ADEQUATE_QA_TIME"
            integration_effort_consideration: "INTEGRATION_COMPLEXITY_ACCOUNTED"
        - resource_requirement_clarity:
            human_resource_requirements: "CLEAR_ROLE_DEFINITIONS"
            technology_resource_requirements: "INFRASTRUCTURE_NEEDS_DEFINED"
            timeline_feasibility: "REALISTIC_SCHEDULE_EXPECTATIONS"
      scoring_method: "PROJECT_MANAGEMENT_FEASIBILITY_ANALYSIS"
      pass_criteria: "IMPLEMENTATION_FEASIBILITY_80_PLUS"

  layer_success_criteria:
    database_design_feasibility: 85
    api_design_feasibility: 85
    implementation_task_feasibility: 80
    overall_feasibility_score: 83

# ========== 第六层：业务价值验证 ==========
layer_6_business_value_validation:
  name: "Business Value Validation"
  priority: "MEDIUM"
  description: "验证业务价值对齐和需求追踪"

  validators:
    - validator: "requirement_traceability_validator"
      description: "需求可追踪性验证"
      checks:
        - acceptance_criteria_coverage:
            requirement_coverage_completeness: "ALL_REQUIREMENTS_ADDRESSED"
            acceptance_criteria_testability: "MEASURABLE_AND_VERIFIABLE"
            success_criteria_clarity: "UNAMBIGUOUS_SUCCESS_DEFINITION"
        - user_story_value_articulation:
            user_benefit_clarity: "CLEAR_USER_VALUE_PROPOSITION"
            business_impact_identification: "BUSINESS_BENEFIT_ARTICULATED"
            priority_justification: "PRIORITY_RATIONALE_CLEAR"
        - epic_level_alignment:
            epic_goal_contribution: "CONTRIBUTES_TO_EPIC_OBJECTIVES"
            strategic_alignment: "BUSINESS_STRATEGY_ALIGNED"
            stakeholder_value_delivery: "STAKEHOLDER_NEEDS_ADDRESSED"
      scoring_method: "REQUIREMENT_ENGINEERING_ANALYSIS"
      pass_criteria: "REQUIREMENT_TRACEABILITY_85_PLUS"

    - validator: "user_experience_impact_validator"
      description: "用户体验影响验证"
      checks:
        - user_journey_consideration:
            user_workflow_impact: "POSITIVE_WORKFLOW_IMPACT"
            usability_improvement: "ENHANCED_USER_EXPERIENCE"
            accessibility_consideration: "INCLUSIVE_DESIGN_PRINCIPLES"
        - interface_design_quality:
            ui_component_appropriateness: "SUITABLE_INTERFACE_ELEMENTS"
            interaction_design_soundness: "INTUITIVE_USER_INTERACTIONS"
            responsive_design_consideration: "MULTI_DEVICE_COMPATIBILITY"
        - performance_impact_assessment:
            response_time_considerations: "ACCEPTABLE_PERFORMANCE_TARGETS"
            scalability_user_impact: "PERFORMANCE_UNDER_LOAD"
            reliability_assurance: "HIGH_AVAILABILITY_DESIGN"
      scoring_method: "UX_IMPACT_ASSESSMENT_FRAMEWORK"
      pass_criteria: "UX_IMPACT_SCORE_80_PLUS"

  layer_success_criteria:
    requirement_traceability: 85
    user_experience_impact: 80
    overall_business_value_score: 82

# ========== 第七层：最终集成验证 ==========
layer_7_final_integration_validation:
  name: "Final Integration Validation"
  priority: "CRITICAL"
  description: "最终集成验证和交付准备"

  validators:
    - validator: "end_to_end_document_validator"
      description: "端到端文档验证"
      checks:
        - document_flow_coherence:
            logical_story_progression: "COHERENT_NARRATIVE_FLOW"
            information_completeness: "NO_INFORMATION_GAPS"
            cross_section_consistency: "SEAMLESS_INFORMATION_FLOW"
        - implementation_readiness:
            development_team_readiness: "ACTIONABLE_FOR_DEVELOPERS"
            testing_team_readiness: "TESTABLE_SPECIFICATIONS"
            deployment_readiness: "DEPLOYMENT_CONSIDERATIONS_ADDRESSED"
        - maintenance_consideration:
            documentation_maintainability: "EASY_TO_UPDATE_AND_MAINTAIN"
            knowledge_transfer_readiness: "COMPREHENSIVE_KNOWLEDGE_CAPTURE"
            future_enhancement_consideration: "EXTENSIBILITY_DESIGNED"
      scoring_method: "HOLISTIC_DOCUMENT_EVALUATION"
      pass_criteria: "DOCUMENT_INTEGRATION_90_PLUS"

    - validator: "quality_metrics_achievement_validator"
      description: "质量指标达成验证"
      checks:
        - all_layer_success_verification:
            layer_1_success: "SYNTAX_FORMAT_PERFECT"
            layer_2_success: "CONTENT_COMPLETE"
            layer_3_success: "QUALITY_HIGH"
            layer_4_success: "CONSISTENCY_MAINTAINED"
            layer_5_success: "FEASIBILITY_CONFIRMED"
            layer_6_success: "BUSINESS_VALUE_ALIGNED"
        - overall_quality_score_calculation:
            weighted_score_computation: "COMPREHENSIVE_QUALITY_METRICS"
            benchmark_comparison: "INDUSTRY_STANDARD_EXCEEDED"
            continuous_improvement_identification: "ENHANCEMENT_OPPORTUNITIES_NOTED"
        - delivery_certification:
            quality_certification: "QUALITY_STANDARDS_MET"
            completeness_certification: "COMPREHENSIVE_DOCUMENTATION"
            implementation_readiness_certification: "READY_FOR_DEVELOPMENT"
      scoring_method: "COMPREHENSIVE_QUALITY_DASHBOARD"
      pass_criteria: "OVERALL_QUALITY_90_PLUS"

  layer_success_criteria:
    end_to_end_document_quality: 90
    quality_metrics_achievement: 90
    overall_integration_score: 90

# ========== 质量纠错和改进系统 ==========
quality_correction_and_improvement_system:
  immediate_correction_triggers:
    - critical_failures: ["syntax_errors", "missing_required_sections", "format_violations"]
      correction_action: "IMMEDIATE_AUTO_CORRECTION"
      retry_attempts: 3
      escalation: "MANUAL_INTERVENTION_IF_AUTO_CORRECTION_FAILS"

    - quality_deficiencies: ["content_gaps", "clarity_issues", "consistency_problems"]
      correction_action: "ITERATIVE_IMPROVEMENT"
      improvement_rounds: 2
      success_criteria: "QUALITY_THRESHOLD_ACHIEVED"

    - feasibility_concerns: ["implementation_complexity", "technical_soundness"]
      correction_action: "EXPERT_SYSTEM_OPTIMIZATION"
      optimization_focus: "TECHNICAL_REFINEMENT"
      validation_requirement: "EXPERT_APPROVAL"

  continuous_improvement_loop:
    - feedback_collection:
        validation_results_analysis: "IDENTIFY_IMPROVEMENT_PATTERNS"
        quality_trend_monitoring: "TRACK_QUALITY_EVOLUTION"
        user_feedback_integration: "INCORPORATE_USER_INSIGHTS"

    - process_optimization:
        validator_effectiveness_assessment: "OPTIMIZE_VALIDATION_ALGORITHMS"
        correction_strategy_refinement: "IMPROVE_AUTO_CORRECTION_ACCURACY"
        quality_standard_evolution: "RAISE_QUALITY_BARS_PROGRESSIVELY"

# ========== 报告和仪表板系统 ==========
reporting_and_dashboard_system:
  real_time_quality_dashboard:
    - layer_by_layer_status: "VISUAL_PROGRESS_TRACKING"
    - quality_score_monitoring: "REAL_TIME_SCORE_UPDATES"
    - correction_activity_log: "AUTO_CORRECTION_TRANSPARENCY"
    - overall_progress_indicator: "COMPLETION_PERCENTAGE"

  comprehensive_quality_report:
    - executive_summary: "HIGH_LEVEL_QUALITY_OVERVIEW"
    - detailed_layer_analysis: "GRANULAR_VALIDATION_RESULTS"
    - improvement_recommendations: "ACTIONABLE_ENHANCEMENT_SUGGESTIONS"
    - quality_certification: "FORMAL_QUALITY_ATTESTATION"

  trend_analysis_reporting:
    - quality_evolution_tracking: "QUALITY_IMPROVEMENT_OVER_TIME"
    - common_issue_identification: "PATTERN_RECOGNITION_INSIGHTS"
    - best_practice_recommendations: "PROVEN_QUALITY_STRATEGIES"

# ========== 成功标准定义 ==========
overall_success_criteria:
  individual_layer_requirements:
    layer_1_syntax_format: 100
    layer_2_content_completeness: 90
    layer_3_content_quality: 87
    layer_4_consistency: 96
    layer_5_implementation_feasibility: 83
    layer_6_business_value: 82
    layer_7_final_integration: 90

  overall_quality_requirements:
    minimum_overall_score: 90
    critical_failure_tolerance: 0
    quality_consistency_requirement: "ALL_DOCUMENTS_MEET_STANDARDS"

  delivery_readiness_criteria:
    documentation_completeness: "100%"
    implementation_readiness: "DEVELOPMENT_READY"
    quality_certification: "FORMALLY_CERTIFIED"
    stakeholder_acceptance: "BUSINESS_APPROVED"
