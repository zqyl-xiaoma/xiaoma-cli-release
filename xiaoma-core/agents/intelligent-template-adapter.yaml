# Intelligent Template Adapter
# 智能模板适配器 - 自动模板理解和应用系统

meta:
  name: "Intelligent Template Adapter"
  version: "2.0"
  description: "智能模板理解、适配和质量保证系统"
  created_date: "2025-09-10"

# ========== 模板智能分析系统 ==========
template_intelligence_system:
  discovery_phase:
    name: "Template Discovery and Analysis"
    steps:
      - step: "locate_templates"
        description: "定位所有模板文件"
        patterns:
          - "**/*template*.yaml"
          - "**/*template*.yml"
          - "**/*tmpl*.yaml"
          - ".xiaoma-core/templates/**"
        validation: "FILE_EXISTS_AND_READABLE"

      - step: "parse_template_structure"
        description: "解析模板结构"
        actions:
          - yaml_structure_analysis
          - field_hierarchy_mapping
          - section_relationship_analysis
          - validation_rule_extraction
        output: "template_schema.json"

      - step: "understand_requirements"
        description: "理解模板要求"
        analysis_points:
          - required_vs_optional_fields
          - field_data_types
          - validation_constraints
          - section_dependencies
          - output_format_requirements
        output: "requirements_matrix.json"

  comprehension_validation:
    name: "Template Comprehension Validation"
    validation_methods:
      - step: "structure_understanding_test"
        description: "测试结构理解"
        test_cases:
          - generate_empty_template
          - validate_field_mappings
          - test_section_hierarchy
          - verify_constraint_understanding
        pass_criteria: "ALL_TESTS_PASS"

      - step: "example_generation_test"
        description: "样例生成测试"
        actions:
          - generate_sample_document
          - validate_against_template
          - check_completeness
          - verify_format_compliance
        pass_criteria: "SAMPLE_VALIDATES_100"

      - step: "edge_case_handling"
        description: "边界情况处理测试"
        test_scenarios:
          - missing_optional_fields
          - complex_nested_structures
          - validation_rule_boundaries
          - format_variations
        pass_criteria: "ROBUST_HANDLING"

# ========== 自动化内容生成引擎 ==========
automated_content_generation_engine:
  content_analysis:
    - step: "source_content_analysis"
      description: "分析源内容"
      actions:
        - extract_key_information
        - identify_content_type
        - map_to_template_sections
        - analyze_content_quality

    - step: "gap_identification"
      description: "识别内容缺口"
      analysis:
        - missing_required_fields
        - incomplete_sections
        - quality_deficiencies
        - consistency_issues

    - step: "enhancement_planning"
      description: "制定增强计划"
      strategies:
        - content_expansion_plan
        - quality_improvement_roadmap
        - consistency_correction_plan
        - template_compliance_plan

  intelligent_content_generation:
    - generator: "database_design_generator"
      description: "数据库设计内容生成器"
      capabilities:
        - entity_relationship_analysis
        - table_structure_generation
        - data_operation_mapping
        - constraint_identification
      quality_check: "SCHEMA_VALIDATION"

    - generator: "api_specification_generator"
      description: "API规范生成器"
      capabilities:
        - endpoint_definition_generation
        - request_response_mapping
        - error_handling_specification
        - data_mapping_creation
      quality_check: "OPENAPI_COMPLIANCE"

    - generator: "task_breakdown_generator"
      description: "任务分解生成器"
      capabilities:
        - requirement_decomposition
        - task_dependency_analysis
        - implementation_planning
        - testing_strategy_definition
      quality_check: "COMPLETENESS_VALIDATION"

# ========== 多维质量验证系统 ==========
multi_dimensional_quality_validation:
  # 维度1：模板结构完整性
  structural_integrity_validation:
    name: "Structural Integrity Check"
    checks:
      - section_presence_validation:
          required_sections:
            - "状态"
            - "用户故事"
            - "验收标准"
            - "数据库设计相关"
            - "API接口规范"
            - "任务/子任务"
            - "开发者说明"
            - "变更日志"
            - "开发者代理记录"
            - "QA结果"
          validation_method: "STRICT_MATCHING"

      - subsection_completeness:
          database_design_subsections:
            - "涉及的数据库实体"
            - "数据操作清单"
            - "业务规则约束"
          api_specification_subsections:
            - "API端点清单"
            - "API详细设计"
            - "数据映射关系"
          validation_method: "HIERARCHICAL_CHECK"

      - field_format_validation:
          user_story_format: "^\\*\\*作为\\*\\*.*\\*\\*我希望\\*\\*.*\\*\\*以便\\*\\*.*"
          status_values: ["Draft", "Approved", "InProgress", "Review", "Done", "Completed"]
          table_format: "MARKDOWN_TABLE"
          validation_method: "REGEX_AND_FORMAT_CHECK"

    scoring:
      weight: 30
      pass_threshold: 100 # 结构完整性必须100%
      critical_failures: ["missing_required_section", "invalid_format"]

  # 维度2：内容质量和完整性
  content_quality_validation:
    name: "Content Quality Assessment"
    assessments:
      - completeness_assessment:
          database_entities_completeness: "ALL_ENTITIES_DOCUMENTED"
          api_endpoints_completeness: "ALL_ENDPOINTS_SPECIFIED"
          task_breakdown_completeness: "FULL_DECOMPOSITION"
          scoring_method: "COVERAGE_PERCENTAGE"

      - accuracy_assessment:
          technical_accuracy: "EXPERT_LEVEL_REVIEW"
          consistency_accuracy: "CROSS_REFERENCE_VALIDATION"
          implementation_feasibility: "TECHNICAL_FEASIBILITY_CHECK"
          scoring_method: "MULTI_CRITERIA_EVALUATION"

      - clarity_assessment:
          language_clarity: "READABILITY_ANALYSIS"
          technical_clarity: "CONCEPT_CLARITY_CHECK"
          instruction_clarity: "ACTIONABILITY_ASSESSMENT"
          scoring_method: "CLARITY_METRICS"

    scoring:
      weight: 25
      pass_threshold: 90
      improvement_strategies: ["content_enhancement", "clarity_improvement", "accuracy_correction"]

  # 维度3：跨文档一致性
  cross_document_consistency_validation:
    name: "Cross-Document Consistency Check"
    consistency_checks:
      - terminology_consistency:
          entity_names: "EXACT_MATCH_REQUIRED"
          api_naming: "CONVENTION_COMPLIANCE"
          status_values: "STANDARDIZED_VALUES"
          validation_method: "DICTIONARY_BASED"

      - structural_consistency:
          section_ordering: "TEMPLATE_ORDER_COMPLIANCE"
          format_consistency: "UNIFORM_FORMATTING"
          style_consistency: "STYLE_GUIDE_COMPLIANCE"
          validation_method: "PATTERN_MATCHING"

      - reference_integrity:
          internal_references: "LINK_VALIDATION"
          cross_story_references: "REFERENCE_EXISTENCE_CHECK"
          version_references: "VERSION_CONSISTENCY"
          validation_method: "GRAPH_ANALYSIS"

    scoring:
      weight: 20
      pass_threshold: 95
      correction_strategies:
        ["terminology_standardization", "format_alignment", "reference_correction"]

  # 维度4：实施可行性
  implementation_feasibility_validation:
    name: "Implementation Feasibility Assessment"
    feasibility_checks:
      - database_design_feasibility:
          schema_validity: "SQL_SCHEMA_VALIDATION"
          relationship_integrity: "FOREIGN_KEY_VALIDATION"
          performance_considerations: "INDEX_AND_QUERY_ANALYSIS"
          validation_method: "DATABASE_EXPERT_SYSTEM"

      - api_design_feasibility:
          rest_compliance: "REST_STANDARD_VALIDATION"
          data_flow_validity: "REQUEST_RESPONSE_VALIDATION"
          error_handling_completeness: "ERROR_SCENARIO_COVERAGE"
          validation_method: "API_DESIGN_EXPERT_SYSTEM"

      - task_feasibility:
          task_decomposition_adequacy: "GRANULARITY_ASSESSMENT"
          dependency_logic: "DEPENDENCY_GRAPH_VALIDATION"
          estimation_reasonableness: "EFFORT_ESTIMATION_CHECK"
          validation_method: "PROJECT_MANAGEMENT_EXPERT_SYSTEM"

    scoring:
      weight: 15
      pass_threshold: 85
      improvement_actions:
        ["design_optimization", "feasibility_enhancement", "implementation_guidance"]

  # 维度5：业务价值对齐
  business_value_alignment_validation:
    name: "Business Value Alignment Check"
    alignment_checks:
      - requirement_coverage:
          acceptance_criteria_coverage: "REQUIREMENT_TRACEABILITY"
          user_story_completeness: "STORY_COVERAGE_ANALYSIS"
          value_proposition_clarity: "BUSINESS_VALUE_ASSESSMENT"
          validation_method: "REQUIREMENT_ENGINEERING_ANALYSIS"

      - stakeholder_value:
          user_experience_consideration: "UX_IMPACT_ASSESSMENT"
          business_process_alignment: "PROCESS_FIT_ANALYSIS"
          roi_considerations: "VALUE_DELIVERY_ASSESSMENT"
          validation_method: "BUSINESS_ANALYSIS_FRAMEWORK"

    scoring:
      weight: 10
      pass_threshold: 80
      enhancement_strategies:
        ["value_clarification", "requirement_refinement", "stakeholder_alignment"]

# ========== 自动纠错和改进系统 ==========
auto_correction_and_improvement_system:
  immediate_corrections:
    - correction_type: "format_standardization"
      triggers: ["format_violation", "structure_mismatch"]
      actions:
        - auto_reformat_sections
        - standardize_terminology
        - correct_table_formats
        - fix_reference_formats
      confidence_threshold: 95

    - correction_type: "content_completion"
      triggers: ["missing_required_content", "incomplete_sections"]
      actions:
        - generate_missing_content
        - complete_partial_sections
        - add_required_subsections
        - fill_mandatory_fields
      confidence_threshold: 90

    - correction_type: "consistency_alignment"
      triggers: ["terminology_mismatch", "format_inconsistency"]
      actions:
        - align_terminology
        - standardize_formats
        - synchronize_references
        - unify_styling
      confidence_threshold: 85

  iterative_improvements:
    - improvement_type: "quality_enhancement"
      iterations: 3
      focus_areas:
        - content_depth_improvement
        - clarity_enhancement
        - technical_accuracy_refinement
        - implementation_detail_addition
      success_criteria: "QUALITY_SCORE_IMPROVEMENT"

    - improvement_type: "completeness_optimization"
      iterations: 2
      focus_areas:
        - gap_filling
        - detail_expansion
        - example_addition
        - context_enhancement
      success_criteria: "COMPLETENESS_SCORE_95_PLUS"

# ========== 执行流程配置 ==========
execution_workflow:
  phase_1_analysis:
    steps:
      - template_discovery_and_parsing
      - comprehension_validation
      - source_content_analysis
      - gap_identification
    duration_estimate: "5-10 minutes"

  phase_2_generation:
    steps:
      - automated_content_generation
      - template_application
      - initial_quality_validation
      - immediate_corrections
    duration_estimate: "10-15 minutes"

  phase_3_validation:
    steps:
      - multi_dimensional_quality_validation
      - cross_document_consistency_check
      - implementation_feasibility_assessment
      - business_value_alignment_check
    duration_estimate: "15-20 minutes"

  phase_4_refinement:
    steps:
      - iterative_improvements
      - final_quality_validation
      - comprehensive_reporting
      - delivery_preparation
    duration_estimate: "10-15 minutes"

  total_estimated_time: "40-60 minutes per document"
  quality_assurance_time: "60% of total time"

# ========== 成功标准 ==========
success_criteria:
  structural_integrity: 100
  content_quality: 90
  cross_document_consistency: 95
  implementation_feasibility: 85
  business_value_alignment: 80
  overall_quality_score: 90

  critical_requirements:
    - zero_structural_defects
    - complete_template_compliance
    - high_content_quality
    - cross_document_consistency
    - implementation_readiness
