# Enhanced Workflow Orchestrator with Multi-layer Quality Assurance
# 增强工作流编排器 - 多层质量保证系统

meta:
  name: "Enhanced Workflow Orchestrator"
  version: "2.0"
  description: "全流程自动化工作流编排器，包含多层质量验证机制"
  created_date: "2025-09-10"
  quality_priority: "MAXIMUM"

# ========== 核心配置 ==========
core_config:
  automation_level: "FULL_AUTO" # 全自动化
  quality_gates: "MULTI_LAYER" # 多层质量门控
  validation_rounds: 3 # 最少3轮验证
  error_tolerance: "ZERO" # 零容错
  parallel_processing: true # 并行处理
  rollback_capability: true # 支持回滚

# ========== 智能任务规划器 ==========
intelligent_task_planner:
  pre_analysis:
    - step: "project_scope_scan"
      description: "扫描项目范围和现有文档"
      actions:
        - scan_directory_structure
        - identify_existing_documents
        - analyze_document_patterns
        - extract_template_requirements

    - step: "template_intelligence"
      description: "智能模板分析和理解"
      actions:
        - read_template_files
        - parse_template_structure
        - generate_template_schema
        - validate_template_understanding

    - step: "task_dependency_mapping"
      description: "任务依赖关系映射"
      actions:
        - identify_task_dependencies
        - calculate_optimal_execution_order
        - determine_parallel_processing_opportunities
        - generate_execution_plan

  execution_planning:
    strategy: "QUALITY_FIRST"
    batch_size: 3 # 每批处理3个任务
    validation_checkpoints: 5 # 5个验证检查点
    rollback_points: true

# ========== 自适应模板引擎 ==========
adaptive_template_engine:
  template_learning:
    - phase: "template_discovery"
      actions:
        - locate_template_files
        - parse_yaml_structure
        - extract_field_definitions
        - identify_validation_rules

    - phase: "template_comprehension"
      actions:
        - analyze_field_relationships
        - understand_section_hierarchy
        - map_required_vs_optional_fields
        - generate_completion_checklist

    - phase: "template_validation"
      actions:
        - verify_template_understanding
        - test_template_application
        - validate_field_mappings
        - confirm_structure_compliance

  dynamic_application:
    format_enforcement: "STRICT"
    field_completion: "MANDATORY"
    structure_validation: "REAL_TIME"

# ========== 多层质量保证系统 ==========
multi_layer_quality_assurance:
  # 第一层：模板合规性验证
  layer_1_template_compliance:
    name: "Template Compliance Validation"
    priority: "CRITICAL"
    checks:
      - template_structure_match
      - required_fields_presence
      - field_format_validation
      - section_hierarchy_check
      - yaml_syntax_validation
    pass_criteria: "ALL_CHECKS_PASS"
    failure_action: "IMMEDIATE_CORRECTION"

  # 第二层：内容质量验证
  layer_2_content_quality:
    name: "Content Quality Validation"
    priority: "HIGH"
    checks:
      - content_completeness_check
      - logical_consistency_validation
      - technical_accuracy_review
      - language_quality_assessment
      - cross_reference_validation
    pass_criteria: "SCORE_ABOVE_90"
    failure_action: "CONTENT_REVISION"

  # 第三层：跨文档一致性验证
  layer_3_cross_document_consistency:
    name: "Cross-Document Consistency Validation"
    priority: "HIGH"
    checks:
      - terminology_consistency
      - structure_alignment
      - version_consistency
      - reference_integrity
      - naming_convention_compliance
    pass_criteria: "CONSISTENCY_SCORE_95"
    failure_action: "BATCH_CORRECTION"

  # 第四层：业务逻辑验证
  layer_4_business_logic:
    name: "Business Logic Validation"
    priority: "MEDIUM"
    checks:
      - database_design_coherence
      - api_specification_completeness
      - implementation_feasibility
      - acceptance_criteria_clarity
      - task_decomposition_adequacy
    pass_criteria: "LOGIC_SCORE_85"
    failure_action: "LOGIC_REFINEMENT"

  # 第五层：最终集成验证
  layer_5_integration_validation:
    name: "Final Integration Validation"
    priority: "CRITICAL"
    checks:
      - end_to_end_document_flow
      - complete_story_coverage
      - implementation_readiness
      - documentation_completeness
      - quality_metrics_achievement
    pass_criteria: "INTEGRATION_SCORE_95"
    failure_action: "COMPREHENSIVE_REVIEW"

# ========== 自动化执行引擎 ==========
automation_execution_engine:
  workflow_steps:
    - step: "initialization"
      description: "工作流初始化"
      actions:
        - load_project_context
        - read_all_templates
        - validate_template_understanding
        - generate_execution_plan
        - setup_quality_gates
      validation: "MANDATORY"

    - step: "batch_processing"
      description: "批量文档处理"
      strategy: "PARALLEL_WITH_VALIDATION"
      actions:
        - process_document_batch
        - apply_template_format
        - perform_layer_1_validation
        - perform_layer_2_validation
        - generate_quality_report
      validation_points: 3

    - step: "cross_validation"
      description: "跨文档验证"
      actions:
        - perform_layer_3_validation
        - perform_layer_4_validation
        - check_global_consistency
        - validate_business_logic
        - generate_consistency_report
      validation: "COMPREHENSIVE"

    - step: "final_integration"
      description: "最终集成验证"
      actions:
        - perform_layer_5_validation
        - generate_final_quality_report
        - update_summary_documents
        - perform_integration_test
        - generate_completion_certificate
      validation: "EXHAUSTIVE"

# ========== 质量检查器配置 ==========
quality_checkers:
  template_compliance_checker:
    name: "TemplateComplianceChecker"
    rules:
      - required_sections:
          [
            "状态",
            "用户故事",
            "验收标准",
            "数据库设计相关",
            "API接口规范",
            "任务/子任务",
            "开发者说明",
            "变更日志",
            "开发者代理记录",
            "QA结果",
          ]
      - field_formats:
          状态: ["Draft", "Approved", "InProgress", "Review", "Done", "Completed"]
          用户故事: "^\\*\\*作为\\*\\*.*\\*\\*我希望\\*\\*.*\\*\\*以便\\*\\*.*"
      - structure_validation: true
      - yaml_syntax_check: true
    error_handling: "AUTO_CORRECTION"

  content_quality_checker:
    name: "ContentQualityChecker"
    metrics:
      completeness_threshold: 95
      accuracy_threshold: 90
      clarity_threshold: 85
      consistency_threshold: 90
    validation_methods:
      - semantic_analysis
      - technical_review
      - completeness_scoring
      - clarity_assessment
    error_handling: "ITERATIVE_IMPROVEMENT"

  consistency_checker:
    name: "ConsistencyChecker"
    scope: "CROSS_DOCUMENT"
    checks:
      - terminology_dictionary
      - naming_conventions
      - structure_patterns
      - reference_integrity
      - version_alignment
    error_handling: "BATCH_CORRECTION"

# ========== 自动纠错系统 ==========
auto_correction_system:
  template_format_correction:
    - missing_sections: "AUTO_GENERATE_WITH_PLACEHOLDER"
    - incorrect_format: "AUTO_REFORMAT"
    - field_validation_errors: "AUTO_CORRECT_WITH_VALIDATION"

  content_improvement:
    - incomplete_content: "AUTO_ENHANCE_WITH_CONTEXT"
    - consistency_issues: "AUTO_ALIGN_WITH_STANDARDS"
    - quality_deficiencies: "ITERATIVE_AUTO_IMPROVEMENT"

  rollback_mechanism:
    - save_checkpoints: "EVERY_MAJOR_STEP"
    - version_control: "AUTOMATIC"
    - rollback_triggers: "QUALITY_FAILURE"

# ========== 报告生成系统 ==========
reporting_system:
  real_time_progress:
    - task_completion_status
    - quality_validation_results
    - error_detection_and_correction
    - performance_metrics

  quality_reports:
    - layer_by_layer_validation_results
    - quality_score_breakdown
    - improvement_recommendations
    - compliance_certification

  final_deliverables:
    - comprehensive_quality_report
    - document_completion_certificate
    - implementation_readiness_assessment
    - maintenance_recommendations

# ========== 执行配置 ==========
execution_config:
  max_parallel_tasks: 5
  validation_timeout: 300 # 5分钟
  auto_correction_attempts: 3
  quality_score_minimum: 90
  rollback_on_failure: true
  comprehensive_logging: true

  notification_settings:
    progress_updates: true
    quality_alerts: true
    completion_notifications: true
    error_notifications: true

# ========== 成功标准 ==========
success_criteria:
  template_compliance: "100%"
  content_quality_score: ">=90"
  cross_document_consistency: ">=95%"
  business_logic_validation: ">=85%"
  integration_validation: ">=95%"
  zero_critical_errors: true
  comprehensive_documentation: true
