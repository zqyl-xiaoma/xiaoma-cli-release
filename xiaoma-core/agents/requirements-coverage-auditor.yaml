# Requirements Coverage Auditor Agent
# 需求覆盖度审计代理

meta:
  name: "Requirements Coverage Auditor"
  version: "1.0"
  description: "专门用于检查需求覆盖度和用户故事实施完整性的审计代理"
  created_date: "2025-09-10"
  specialization: "requirements_validation_and_audit"

# ========== 代理能力定义 ==========
agent_capabilities:
  core_functions:
    - "PRD文档分析和需求提取"
    - "用户故事完整性验证"
    - "需求到故事的映射分析"
    - "实施状态真实性验证"
    - "覆盖度差距识别"
    - "综合审计报告生成"

  analysis_depth:
    - "语义级需求理解"
    - "结构化文档解析"
    - "跨文档关联分析"
    - "实施证据验证"
    - "质量标准符合度检查"

# ========== 审计执行引擎 ==========
audit_execution_engine:
  # 阶段1：文档发现和解析
  phase_1_document_discovery:
    name: "文档发现和解析阶段"
    actions:
      - action: "scan_prd_documents"
        description: "扫描并解析PRD文档"
        targets:
          - "云链API平台需求文档.md"
          - "docs/prd/史诗-*.md"
        parsing_rules:
          - extract_epic_definitions
          - identify_user_story_requirements
          - parse_acceptance_criteria
          - extract_functional_requirements

      - action: "scan_implemented_stories"
        description: "扫描已实施的用户故事"
        targets:
          - "docs/stories/epic*-story*.md"
        parsing_rules:
          - extract_story_metadata
          - analyze_implementation_status
          - verify_content_completeness
          - check_required_sections

      - action: "load_summary_documents"
        description: "加载汇总文档"
        targets:
          - "docs/stories/COMPLETED_STORIES_SUMMARY.md"
        parsing_rules:
          - extract_completion_statistics
          - verify_summary_accuracy

  # 阶段2：需求映射分析
  phase_2_requirement_mapping:
    name: "需求映射分析阶段"
    actions:
      - action: "build_requirements_hierarchy"
        description: "构建需求层次结构"
        algorithms:
          - epic_to_story_mapping
          - story_to_requirement_tracing
          - dependency_relationship_analysis

      - action: "create_coverage_matrix"
        description: "创建覆盖度矩阵"
        matrix_dimensions:
          - epic_level_requirements
          - user_story_level_requirements
          - implementation_status
          - completion_evidence

      - action: "identify_mapping_gaps"
        description: "识别映射差距"
        gap_types:
          - unmapped_requirements
          - orphaned_stories
          - inconsistent_implementations
          - missing_dependencies

  # 阶段3：实施完整性验证
  phase_3_implementation_verification:
    name: "实施完整性验证阶段"
    validation_layers:
      - layer: "structural_completeness"
        name: "结构完整性验证"
        checks:
          - required_sections_presence
          - section_hierarchy_correctness
          - content_format_compliance
          - template_adherence_verification
        scoring_weight: 25

      - layer: "content_completeness"
        name: "内容完整性验证"
        checks:
          - user_story_format_validation
          - acceptance_criteria_adequacy
          - database_design_completeness
          - api_specification_completeness
          - task_breakdown_completeness
        scoring_weight: 35

      - layer: "implementation_evidence"
        name: "实施证据验证"
        checks:
          - developer_records_presence
          - qa_results_authenticity
          - file_lists_accuracy
          - implementation_details_verification
        scoring_weight: 25

      - layer: "quality_standards"
        name: "质量标准符合度"
        checks:
          - technical_accuracy_assessment
          - documentation_clarity
          - consistency_verification
          - business_value_alignment
        scoring_weight: 15

  # 阶段4：差距分析和建议
  phase_4_gap_analysis_recommendations:
    name: "差距分析和改进建议阶段"
    analysis_methods:
      - method: "coverage_gap_analysis"
        description: "覆盖度差距分析"
        techniques:
          - requirement_coverage_calculation
          - priority_weighted_coverage
          - critical_path_analysis
          - risk_impact_assessment

      - method: "quality_gap_analysis"
        description: "质量差距分析"
        techniques:
          - completeness_gap_identification
          - consistency_deviation_analysis
          - implementation_quality_assessment
          - documentation_standard_compliance

      - method: "improvement_prioritization"
        description: "改进优先级分析"
        criteria:
          - business_value_impact
          - implementation_complexity
          - resource_requirement
          - timeline_constraints

# ========== 分析算法配置 ==========
analysis_algorithms:
  # 需求提取算法
  requirement_extraction:
    - algorithm: "semantic_parsing"
      description: "语义解析需求文本"
      techniques:
        - keyword_identification
        - context_analysis
        - dependency_extraction
        - priority_inference

    - algorithm: "structure_analysis"
      description: "分析文档结构"
      techniques:
        - section_hierarchy_parsing
        - content_classification
        - relationship_mapping
        - metadata_extraction

  # 映射分析算法
  mapping_analysis:
    - algorithm: "similarity_matching"
      description: "基于相似度的需求故事匹配"
      techniques:
        - text_similarity_calculation
        - semantic_similarity_assessment
        - structural_similarity_evaluation

    - algorithm: "dependency_tracing"
      description: "依赖关系追踪"
      techniques:
        - forward_tracing
        - backward_tracing
        - cross_reference_validation

  # 完整性验证算法
  completeness_verification:
    - algorithm: "template_compliance_check"
      description: "模板合规性检查"
      validation_rules:
        - required_sections_check
        - format_consistency_validation
        - content_quality_assessment

    - algorithm: "evidence_verification"
      description: "实施证据验证"
      verification_methods:
        - content_authenticity_check
        - implementation_consistency_validation
        - quality_metric_verification

# ========== 报告生成配置 ==========
report_generation:
  # 报告模板
  report_templates:
    executive_summary_template: |
      # 需求覆盖度审计报告 - 执行摘要

      ## 🎯 审计概览
      - **审计日期**: {{audit_date}}
      - **审计范围**: {{audit_scope}}
      - **总体评级**: {{overall_rating}}

      ## 📊 关键指标
      - **需求总数**: {{total_requirements}}
      - **已实施用户故事**: {{implemented_stories}}
      - **覆盖度**: {{coverage_percentage}}%
      - **完整性评分**: {{completeness_score}}/100

      ## 🔍 关键发现
      {{key_findings}}

      ## ⚡ 优先改进建议
      {{priority_recommendations}}

    detailed_analysis_template: |
      # 需求覆盖度详细分析

      ## 📋 需求覆盖度矩阵
      {{coverage_matrix_table}}

      ## ✅ 用户故事完整性分析
      {{story_completeness_analysis}}

      ## 🔗 需求到故事映射
      {{requirement_story_mapping}}

      ## ⚠️ 识别的问题和差距
      {{identified_gaps_and_issues}}

      ## 📈 质量趋势分析
      {{quality_trend_analysis}}

    action_plan_template: |
      # 实施改进行动计划

      ## 🚨 立即行动项（高优先级）
      {{immediate_actions}}

      ## 📅 短期改进计划（2-4周）
      {{short_term_plan}}

      ## 🎯 长期完善建议（1-3个月）
      {{long_term_recommendations}}

      ## 💼 资源需求评估
      {{resource_requirements}}

      ## 📊 成功度量标准
      {{success_metrics}}

  # 数据可视化
  visualization_options:
    - type: "coverage_heatmap"
      description: "需求覆盖度热力图"
      axes: ["epic", "story", "completion_status"]

    - type: "completeness_radar_chart"
      description: "用户故事完整性雷达图"
      dimensions: ["structure", "content", "implementation", "quality"]

    - type: "gap_analysis_matrix"
      description: "差距分析矩阵"
      dimensions: ["priority", "complexity", "impact"]

# ========== 质量阈值配置 ==========
quality_thresholds:
  coverage_thresholds:
    excellent: 95 # 优秀覆盖度
    good: 85 # 良好覆盖度
    acceptable: 75 # 可接受覆盖度
    poor: 60 # 较差覆盖度

  completeness_thresholds:
    structure_completeness: 90 # 结构完整性阈值
    content_quality: 85 # 内容质量阈值
    implementation_evidence: 80 # 实施证据阈值
    overall_completeness: 85 # 整体完整性阈值

  quality_gates:
    critical_requirements_coverage: 100 # 关键需求100%覆盖
    high_priority_completeness: 90 # 高优先级故事90%完整
    documentation_standards: 85 # 文档标准85%符合

# ========== 输出配置 ==========
output_configuration:
  primary_outputs:
    - name: "comprehensive_audit_report"
      location: "audit-reports/"
      filename: "requirements_coverage_audit_{{timestamp}}.md"
      includes: ["executive_summary", "detailed_analysis", "action_plan"]

    - name: "coverage_matrix_data"
      location: "audit-data/"
      filename: "coverage_matrix_{{timestamp}}.json"
      format: "structured_json"

    - name: "gap_analysis_report"
      location: "audit-reports/"
      filename: "implementation_gaps_{{timestamp}}.md"
      focus: "actionable_improvements"

  supplementary_outputs:
    - name: "story_completeness_scores"
      location: "audit-data/"
      filename: "completeness_scores_{{timestamp}}.json"

    - name: "requirements_inventory"
      location: "audit-data/"
      filename: "requirements_inventory_{{timestamp}}.json"

    - name: "improvement_roadmap"
      location: "audit-reports/"
      filename: "improvement_roadmap_{{timestamp}}.md"

# ========== 执行模式 ==========
execution_modes:
  comprehensive_audit:
    description: "全面审计模式"
    scope: "all_requirements_and_stories"
    depth: "deep_analysis"
    duration: "20-30 minutes"

  focused_audit:
    description: "专注审计模式"
    scope: "specific_epic_or_story_set"
    depth: "targeted_analysis"
    duration: "10-15 minutes"

  quick_validation:
    description: "快速验证模式"
    scope: "completion_status_verification"
    depth: "surface_level_check"
    duration: "5-8 minutes"

# ========== 成功标准 ==========
success_criteria:
  audit_accuracy:
    - "100%文档发现和解析"
    - "准确的需求故事映射"
    - "可靠的完整性评估"
    - "真实的实施状态验证"

  report_usefulness:
    - "清晰的执行摘要"
    - "具体的改进建议"
    - "可行的行动计划"
    - "准确的优先级排序"

  actionable_insights:
    - "识别具体覆盖度差距"
    - "提供实施改进路径"
    - "估算资源需求"
    - "制定时间计划"
